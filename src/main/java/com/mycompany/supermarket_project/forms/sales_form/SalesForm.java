package com.mycompany.supermarket_project.forms.sales_form;

import com.mycompany.supermarket_project.forms.logIn_form.LoginForm;
import com.mycompany.supermarket_project.model.Order;
import com.mycompany.supermarket_project.model.Product;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.mycompany.supermarket_project.*;
import com.mycompany.supermarket_project.forms.change_info_form.*;
import utility.database_navigation.*;

public class SalesForm extends javax.swing.JFrame {

    private List<Order> orderItemsList = new ArrayList<>();

    public SalesForm() {
        initComponents();
        orderPriceShow.setText("0");
        OrderNoShow.setText("");
        addDataToAllOrdersTable();
        clearForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        productIdInput = new javax.swing.JTextField();
        quantityInput = new javax.swing.JTextField();
        productIdLbl = new javax.swing.JLabel();
        quantityLbl = new javax.swing.JLabel();
        addToOrderBtn = new javax.swing.JButton();
        submitOrder = new javax.swing.JButton();
        searchOrderBtn = new javax.swing.JButton();
        deleteOrderBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderResults = new javax.swing.JTable();
        clrFormBtn = new javax.swing.JButton();
        OrderNoShow = new javax.swing.JTextField();
        orderPriceShow = new javax.swing.JTextField();
        orderNoLbl = new javax.swing.JLabel();
        orderPriceLbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        searchByIdBtn = new javax.swing.JButton();
        searchByNameBtn = new javax.swing.JButton();
        listAllProductsBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchResultTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        allOrderPrice = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        chngInfoBtn = new javax.swing.JMenu();
        signOutBtn1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sales Panel");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        productIdLbl.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        productIdLbl.setForeground(new java.awt.Color(255, 102, 0));
        productIdLbl.setText("Product Id");

        quantityLbl.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        quantityLbl.setForeground(new java.awt.Color(255, 102, 0));
        quantityLbl.setText("Quantity");

        addToOrderBtn.setBackground(new java.awt.Color(255, 102, 0));
        addToOrderBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        addToOrderBtn.setForeground(new java.awt.Color(255, 255, 255));
        addToOrderBtn.setText("Add To Order");
        addToOrderBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToOrderBtnMouseClicked(evt);
            }
        });

        submitOrder.setBackground(new java.awt.Color(255, 102, 0));
        submitOrder.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        submitOrder.setForeground(new java.awt.Color(255, 255, 255));
        submitOrder.setText("Submit Order");
        submitOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitOrderMouseClicked(evt);
            }
        });

        searchOrderBtn.setBackground(new java.awt.Color(255, 102, 0));
        searchOrderBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        searchOrderBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchOrderBtn.setText("Search Order");
        searchOrderBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchOrderBtnMouseClicked(evt);
            }
        });

        deleteOrderBtn.setBackground(new java.awt.Color(255, 102, 0));
        deleteOrderBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        deleteOrderBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteOrderBtn.setText("Delete Order");
        deleteOrderBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteOrderBtnMouseClicked(evt);
            }
        });

        orderResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Id", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderResults);

        clrFormBtn.setBackground(new java.awt.Color(255, 102, 0));
        clrFormBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        clrFormBtn.setForeground(new java.awt.Color(255, 255, 255));
        clrFormBtn.setText("Clear");
        clrFormBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clrFormBtnMouseClicked(evt);
            }
        });

        OrderNoShow.setEditable(false);

        orderPriceShow.setEditable(false);

        orderNoLbl.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        orderNoLbl.setForeground(new java.awt.Color(255, 102, 0));
        orderNoLbl.setText("Order No");

        orderPriceLbl.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        orderPriceLbl.setForeground(new java.awt.Color(255, 102, 0));
        orderPriceLbl.setText("Order Price");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 0));
        jLabel5.setText("ORDER INFORMATION");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(searchOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(deleteOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(addToOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(submitOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(productIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(quantityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(productIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(quantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(clrFormBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 9, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderNoLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderPriceLbl, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderPriceShow, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OrderNoShow, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addToOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(clrFormBtn)
                .addGap(81, 81, 81)
                .addComponent(jLabel5)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OrderNoShow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderNoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderPriceShow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderPriceLbl))
                .addContainerGap(580, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Orders   ", jPanel2);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        searchByIdBtn.setBackground(new java.awt.Color(255, 102, 0));
        searchByIdBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        searchByIdBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchByIdBtn.setText("Search By Id");
        searchByIdBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchByIdBtnMouseClicked(evt);
            }
        });

        searchByNameBtn.setBackground(new java.awt.Color(255, 102, 0));
        searchByNameBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        searchByNameBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchByNameBtn.setText("Search By Name");
        searchByNameBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchByNameBtnMouseClicked(evt);
            }
        });

        listAllProductsBtn.setBackground(new java.awt.Color(255, 102, 0));
        listAllProductsBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        listAllProductsBtn.setForeground(new java.awt.Color(255, 255, 255));
        listAllProductsBtn.setText("List All Products");
        listAllProductsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAllProductsBtnMouseClicked(evt);
            }
        });

        searchResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Quantity", "Min Quantity", "Price", "offer", "Expire Date", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchResultTable.setMinimumSize(new java.awt.Dimension(50, 50));
        searchResultTable.setShowGrid(true);
        jScrollPane2.setViewportView(searchResultTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listAllProductsBtn)
                    .addComponent(searchByIdBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByNameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(searchByIdBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchByNameBtn)
                .addGap(18, 18, 18)
                .addComponent(listAllProductsBtn)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );

        jTabbedPane1.addTab("Search   ", jPanel1);

        allOrderPrice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "OrderId", "ProductId", "quantity", "price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(allOrderPrice);

        jTabbedPane1.addTab("All Orders", jScrollPane4);

        chngInfoBtn.setText("Change My Information");
        chngInfoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chngInfoBtnMouseClicked(evt);
            }
        });
        jMenuBar1.add(chngInfoBtn);

        signOutBtn1.setText("Sign Out");
        signOutBtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signOutBtn1MouseClicked(evt);
            }
        });
        jMenuBar1.add(signOutBtn1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void clearForm() {
        productIdInput.setText("");
        quantityInput.setText("");
        orderItemsList = new ArrayList<>();
        addDataToOrdersTable(null);

        addToOrderBtn.setEnabled(true);
        submitOrder.setEnabled(true);
        orderPriceShow.setText("0");
        OrderNoShow.setText("");
        addDataToAllOrdersTable();
    }

    private void signOutBtn1MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_signOutBtn1MouseClicked
        Supermarket.signout();
        this.dispose();
        new LoginForm().setVisible(true);
    }// GEN-LAST:event_signOutBtn1MouseClicked

    private void chngInfoBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_chngInfoBtnMouseClicked
        new ChangeOwnInfoForm().setVisible(true);
    }// GEN-LAST:event_chngInfoBtnMouseClicked

    private void listAllProductsBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_listAllProductsBtnMouseClicked
        try {
            productDB prodDB = new productDB();
            List<Product> productList = prodDB.getAllProducts();
            addDataToSearchTable(productList);
        } catch (Error e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }// GEN-LAST:event_listAllProductsBtnMouseClicked

    private void searchByNameBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_searchByNameBtnMouseClicked
        try {
            String productName = JOptionPane.showInputDialog("Enter Product Name");

            productDB prodDB = new productDB();
            Product prod = prodDB.getProductByName(productName);

            if (prod == null) {
                JOptionPane.showMessageDialog(this, "no Result");
                return;
            }

            List<Product> searchProductList = new ArrayList<>();
            searchProductList.add(prod);

            addDataToSearchTable(searchProductList);
        } catch (Error e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }// GEN-LAST:event_searchByNameBtnMouseClicked

    private void searchByIdBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_searchByIdBtnMouseClicked
        try {
            String productId = JOptionPane.showInputDialog("Enter Product Id");
            if (!utility.Utilities.isValidLong(this, productId))
                return;

            productDB prodDB = new productDB();
            Product prod = prodDB.getProductById(Long.parseLong(productId));
            if (prod == null) {
                JOptionPane.showMessageDialog(this, "no Result");
                return;
            }

            List<Product> searchProductList = new ArrayList<>();
            searchProductList.add(prod);

            addDataToSearchTable(searchProductList);
        } catch (Error e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }// GEN-LAST:event_searchByIdBtnMouseClicked

    private void clrFormBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_clrFormBtnMouseClicked
        clearForm();
    }// GEN-LAST:event_clrFormBtnMouseClicked

    private void deleteOrderBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_deleteOrderBtnMouseClicked
        try {
            String orderId = JOptionPane.showInputDialog("Enter Order ID");

            if (!utility.Utilities.isValidInteger(this, orderId))
                return;

            orderDB ordDB = new orderDB();

            int res = ordDB.removeOrder(Long.parseLong(orderId));
            if (res == -1) {
                JOptionPane.showMessageDialog(this, "Order no " + orderId + " not found or order is empty");
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Order no " + orderId + " deleted successfully");
                clearForm();
                return;
            }
        } catch (Error e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }// GEN-LAST:event_deleteOrderBtnMouseClicked

    private void searchOrderBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_searchOrderBtnMouseClicked
        String orderId = JOptionPane.showInputDialog("Enter Order ID");

        if (!utility.Utilities.isValidInteger(this, orderId))
            return;

        orderDB ordDB = new orderDB();
        List<Order> orderItems = ordDB.getOrderItems(Long.parseLong(orderId));

        if (orderItems == null || orderItems.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Order no " + orderId + " not found");
            clearForm();
            return;
        }

        int totalPrice = 0;
        for (int i = 0; i < orderItems.size(); i++) {
            totalPrice += orderItems.get(i).getPrice();
        }

        addDataToOrdersTable(orderItems);
        OrderNoShow.setText(orderId);
        orderPriceShow.setText(totalPrice + "");
        addToOrderBtn.setEnabled(false);
        submitOrder.setEnabled(false);
    }

    // GEN-LAST:event_searchOrderBtnMouseClicked
    private void submitOrderMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_submitOrderMouseClicked

        double orderPrice = 0;
        for (int i = 0; i < orderItemsList.size(); i++) {
            orderPrice += orderItemsList.get(i).getPrice();

        }

        orderDB ordDB = new orderDB();
        Long id = ordDB.createOrder(orderItemsList);
        if (id == -1) {
            JOptionPane.showMessageDialog(this, "something went wrong!");
            return;
        }

        clearForm();
        orderPriceShow.setText(orderPrice + "");
        OrderNoShow.setText(id + "");
        JOptionPane.showMessageDialog(this, "order created successfully");
    }// GEN-LAST:event_submitOrderMouseClicked

    private void addToOrderBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_addToOrderBtnMouseClicked

        if (!utility.Utilities.isValidLong(this, productIdInput.getText()) ||
                !utility.Utilities.isValidInteger(this, quantityInput.getText())) {
            return;
        }

        productDB prodDB = new productDB();
        Product prod = prodDB.getProductById(Long.parseLong(productIdInput.getText()));

        if (prod == null) {
            JOptionPane.showMessageDialog(this, "product with id " + productIdInput.getText() + " not found");
            return;
        }

        if (prod.getQuantity() < Integer.parseInt(quantityInput.getText())) {
            JOptionPane.showMessageDialog(this, "Quantity isn't enough");
            return;
        }

        Order item = new Order(Long.parseLong(productIdInput.getText()),
                Integer.parseInt(quantityInput.getText()),
                null);

        double totalPrice = item.getPrice() + Double.parseDouble(orderPriceShow.getText());
        orderPriceShow.setText(totalPrice + "");

        orderItemsList.add(item);
        addDataToOrdersTable(orderItemsList);
        addDataToAllOrdersTable();
    }// GEN-LAST:event_addToOrderBtnMouseClicked

    private void addDataToSearchTable(List<Product> productList) {
        DefaultTableModel tableModel = (DefaultTableModel) searchResultTable.getModel();
        tableModel.setRowCount(0);
        Object rowData[] = new Object[8];
        for (int i = 0; i < productList.size(); i++) {
            rowData[0] = productList.get(i).getId();
            rowData[1] = productList.get(i).getName();
            rowData[2] = productList.get(i).getQuantity();
            rowData[3] = productList.get(i).getMinQuantity();
            rowData[4] = productList.get(i).getPrice();
            rowData[5] = productList.get(i).getOffer();
            rowData[6] = productList.get(i).getExpireDate().toString();
            rowData[7] = productList.get(i).getDescription();
            tableModel.addRow(rowData);
        }
    }

    private void addDataToOrdersTable(List<Order> orderList) {
        DefaultTableModel tableModel = (DefaultTableModel) orderResults.getModel();
        tableModel.setRowCount(0);
        if (orderList == null || orderList.isEmpty()) {
            Object rowData[] = new Object[0];
            tableModel.addRow(rowData);
            return;
        }
        Object rowData[] = new Object[3];
        for (int i = 0; i < orderList.size(); i++) {
            rowData[0] = orderList.get(i).getItemId();
            rowData[1] = orderList.get(i).getQuantity();
            rowData[2] = orderList.get(i).getPrice();
            tableModel.addRow(rowData);
        }

    }

    private void addDataToAllOrdersTable() {
        DefaultTableModel tableModel = (DefaultTableModel) allOrderPrice.getModel();
        tableModel.setRowCount(0);
        orderDB ordDB = new orderDB();
        List<Order> orderItems = ordDB.getAllOrderItems();

        Object rowData[] = new Object[4];
        for (int i = 0; i < orderItems.size(); i++) {
            rowData[0] = orderItems.get(i).getOrderId();
            rowData[1] = orderItems.get(i).getItemId();
            rowData[2] = orderItems.get(i).getQuantity();
            rowData[3] = orderItems.get(i).getPrice();
            tableModel.addRow(rowData);
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField OrderNoShow;
    private javax.swing.JButton addToOrderBtn;
    private javax.swing.JTable allOrderPrice;
    private javax.swing.JMenu chngInfoBtn;
    private javax.swing.JButton clrFormBtn;
    private javax.swing.JButton deleteOrderBtn;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton listAllProductsBtn;
    private javax.swing.JLabel orderNoLbl;
    private javax.swing.JLabel orderPriceLbl;
    private javax.swing.JTextField orderPriceShow;
    private javax.swing.JTable orderResults;
    private javax.swing.JTextField productIdInput;
    private javax.swing.JLabel productIdLbl;
    private javax.swing.JTextField quantityInput;
    private javax.swing.JLabel quantityLbl;
    private javax.swing.JButton searchByIdBtn;
    private javax.swing.JButton searchByNameBtn;
    private javax.swing.JButton searchOrderBtn;
    private javax.swing.JTable searchResultTable;
    private javax.swing.JMenu signOutBtn1;
    private javax.swing.JButton submitOrder;
    // End of variables declaration//GEN-END:variables
}
